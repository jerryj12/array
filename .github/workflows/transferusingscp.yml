name: Deploy to Linux Server via SCP

on:
  workflow_dispatch:
    inputs:
      folder_name:
        description: 'Folder to Zip and Deploy'
        required: true
      choice:
        type: choice
        description: 'Environment Variable'
        options:
          - Dev
          - Test
          - Deploy

jobs:
  build:
    runs-on: self-runner

    steps:
    - uses: actions/checkout@v2

    - name: Create ZIP Archive
      run: |
          # Add commands to create a ZIP archive of your project in the root directory 
          cd PLM_SOURCE/BUILD_MASTER
          zip -r ${{ github.event.inputs.name }}.zip ${{ github.event.inputs.name }}
    
    - name: Set Environment Variables based on Environment Type
      id: env
      run: |
        if [[ "${{ github.event.inputs.choice }}" == "Dev" ]]; then
          echo "::set-output name=host::${{ secrets.HOST }}"
          echo "::set-output name=username::${{ secrets.USERNAME }}"
          echo "::set-output name=password::${{ secrets.PASSWORD }}"
          echo "::set-output name=ssh_private_key::${{ secrets.SSH_PRIVATE_KEY }}"
        elif [[ "${{ github.event.inputs.choice }}" == "Test" ]]; then
          echo "::set-output name=host::${{ secrets.HOST_TEST }}"
          echo "::set-output name=username::${{ secrets.USERNAME_TEST }}"
          echo "::set-output name=password::${{ secrets.PASSWORD_TEST }}"
          echo "::set-output name=ssh_private_key::${{ secrets.SSH_PRIVATE_KEY_TEST }}"
        elif [[ "${{ github.event.inputs.choice }}" == "Deploy" ]]; then
          echo "::set-output name=host::${{ secrets.HOST_DEPLOY }}"
          echo "::set-output name=username::${{ secrets.USERNAME_DEPLOY }}"
          echo "::set-output name=password::${{ secrets.PASSWORD_DEPLOY }}"
          echo "::set-output name=ssh_private_key::${{ secrets.SSH_PRIVATE_KEY_DEPLOY }}"
        else
          echo "Invalid environment type selected."
          exit 1
        fi

    - name: Create and upload artifact
      uses: actions/upload-artifact@v2
      with:
         name: ${{ github.event.inputs.folder_name }}.tar
         path: PLM_SOURCE/BUILD_MASTER/${{ github.event.inputs.folder_name }}.zip
    
    - name: Download .tar file to the runner
      uses: actions/download-artifact@v2
      with:
        name: ${{ github.event.inputs.folder_name }}.zip

    - name: List downloaded files
      run: ls -al

   #- name: Check out the repository to the runner
      #uses: actions/checkout@v4  
    #- name: Make the script files executable
      #run: chmod +x my-script.sh
    #- name: Run the scripts
      #run: |
