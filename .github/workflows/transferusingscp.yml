name: Deploy to Linux Server via SCP

on:
  workflow_dispatch:
    inputs:
      folder_name:
        description: 'Folder to Zip and Deploy'
        required: true
      choice:
        type: choice
        description: 'Environment Variable'
        options:
          - Dev
          - Test
          - Deploy

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Copy specific folder to build directory
      run: |
        mkdir ../build
        cp -r PLM_SOURCE/BUILD_MASTER/${{ github.event.inputs.folder_name }} ../build
        tar -cvf ${{ github.event.inputs.folder_name }}.tar -C ../build .
    
    - name: Set Environment Variables based on Environment Type
      id: env
      run: |
        if [[ "${{ github.event.inputs.choice }}" == "Dev" ]]; then
          echo "::set-output name=host::${{ secrets.HOST }}"
          echo "::set-output name=username::${{ secrets.USERNAME }}"
          echo "::set-output name=password::${{ secrets.PASSWORD }}"
          echo "::set-output name=ssh_private_key::${{ secrets.SSH_PRIVATE_KEY }}"
        elif [[ "${{ github.event.inputs.choice }}" == "Test" ]]; then
          echo "::set-output name=host::${{ secrets.HOST_TEST }}"
          echo "::set-output name=username::${{ secrets.USERNAME_TEST }}"
          echo "::set-output name=password::${{ secrets.PASSWORD_TEST }}"
          echo "::set-output name=ssh_private_key::${{ secrets.SSH_PRIVATE_KEY_TEST }}"
        elif [[ "${{ github.event.inputs.choice }}" == "Deploy" ]]; then
          echo "::set-output name=host::${{ secrets.HOST_DEPLOY }}"
          echo "::set-output name=username::${{ secrets.USERNAME_DEPLOY }}"
          echo "::set-output name=password::${{ secrets.PASSWORD_DEPLOY }}"
          echo "::set-output name=ssh_private_key::${{ secrets.SSH_PRIVATE_KEY_DEPLOY }}"
        else
          echo "Invalid environment type selected."
          exit 1
        fi
    
    - name: Copy file via SSH password
      uses: appleboy/scp-action@master
      with:
        host: ${{ steps.env.outputs.host }}
        username: ${{ steps.env.outputs.username }}
        password: ${{ steps.env.outputs.password }}
        key: ${{ steps.env.outputs.ssh_private_key }}
        port: ${{ secrets.PORT }}
        source: "${{ github.event.inputs.folder_name }}.tar"
        target: "/home/u813984108/domains/sociocast.co/public_html/scimail/"

    - name: Check out the repository to the runner
      uses: actions/checkout@v4  
    - name: Make the script files executable
      run: chmod +x my-script.sh
    - name: Run the scripts
      run: |
        ./my-script.sh
