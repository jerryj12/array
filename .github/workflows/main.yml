name: Deploy to Linux Server via FTP

on:
  workflow_dispatch:  # Enable manual execution
  # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'FolderName'
        # Default value if no value is explicitly provided
        default: '16_OCT_2023'
        # Input has to be provided for the workflow to run
        required: true
  
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set Up FTP
        run: |
          sudo apt-get -y install lftp
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USER: ${{ secrets.FTP_USER }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}

      - name: Create ZIP Archive
        run: |
          # Add commands to create a ZIP archive of your project in the root directory
          cd PLM_SOURCE/BUILD_MASTER
          zip -r ${{ github.event.inputs.name }}.zip ${{ github.event.inputs.name }}/
          # The "." indicates the current directory, which is the root of your repository

      - name: Upload ZIP Archive to Linux Server via FTP
        run: |
          # Install the required tools if not already installed
          sudo apt-get -y install lftp

          # Create a script file to upload the ZIP archive via FTP
          echo "set ssl:check-hostname no" >> ftp_commands  # Disable hostname checking
          echo "open -u $FTP_USER,$FTP_PASSWORD $FTP_SERVER" >> ftp_commands
          echo "cd ~/PLM_SOURCE/BUILD_MASTER" >> ftp_commands  # Replace with your desired destination directory
          echo "put ${{ github.event.inputs.name }}.zip" >> ftp_commands    # Replace with your ZIP archive filename
          echo "bye" >> ftp_commands

          # Use lftp to execute the FTP commands from the script file
          lftp -f ftp_commands
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USER: ${{ secrets.FTP_USER }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}


      #- name: Set up environment
        #run: |
          #endpoint=${{ secrets.ITAR_CNTRL_M_API_ENDPNT }}
          #user=${{ secrets.CTRLM_USER_ID }}
          #passwd=${{ secrets.CTRLM_PASSWD }}
          #ctm=HANICMAP1
          #folderName=PLM-PLMTST-DEPLOYMENT
          #orderDate=$(date '+%Y%m%d')
          #jobName=Enovia_Deployment
        #env:
          #endpoint: $endpoint
          #user: $user
          #passwd: $passwd
          #ctm: $ctm
          #folderName: $folderName
          #orderDate: $orderDate
          #jobName: $jobName

      #- name: Login
        #run: |
          #login=$(curl -H "Content-Type: application/json" -X POST -d "{\"username\":\"$user\",\"password\":\"$passwd\"}" "$endpoint/session/login" )
          #token=$(echo ${login//[$'\t\r\n ']})
        #env:
          #token: $token

      #- name: Order Job
        #run: |
          #curl -X POST -H "Authorization: Bearer $token" --header "Content-Type: application/json" --header "Accept: application/json" -d "{
            #\"ctm\": \"$ctm\",
            #\"folder\": \"$folderName\",
            #\"jobs\": \"$jobName\",
            #\"hold\": \"false\",
            #\"ignoreCriteria\": \"true\",
            #\"independantFlow\": \"false\",
            #\"orderDate\": \"$orderDate\",
            #\"waitForOrderDate\": \"false\",
            #\"createDuplicate\": \"false\",
            #\"orderIntoFolder\": \"Recent\",
            #\"variables\": [{\"arg\":\"12345\"}]
          #}" "$endpoint/run/order"

      #- name: Logout
        #run: |
          #curl -g -k -H "Authorization: Bearer $token" -X POST "$endpoint/session/logout"
