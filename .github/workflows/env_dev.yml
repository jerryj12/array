name: Download zip to runner

on:
  workflow_dispatch:
    inputs:
      folder_name:
        description: 'Folder to Zip and Deploy'
        required: true
      choice:
        type: choice
        default: Dev
        description: 'Environment Variable'
        options:
          - Dev
          - Test
          - Deploy

jobs:
  build:
    runs-on: Linux

    steps:
    - uses: actions/checkout@v2

    - name: Create ZIP Archive
      run: |
          # Add commands to create a ZIP archive of your project in the root directory 
          cd PLM_SOURCE/BUILD_MASTER
          if ! zip -r ${{ github.event.inputs.folder_name }}.zip ${{ github.event.inputs.folder_name }}; then
            echo "Error: Failed to create ZIP archive"
            if ! chmod +x my-script.sh; then
             echo "Error: Failed to make email script executable"
            fi
            if ! ./my-script.sh; then
             echo "Error: Failed to send error mail"
            fi
            
          fi

    - name: Create and upload artifact
      uses: actions/upload-artifact@v2
      with:
         name: ${{ github.event.inputs.folder_name }}.zip
         path: PLM_SOURCE/BUILD_MASTER/${{ github.event.inputs.folder_name }}.zip

    - name: Set Environment Variables
      run: |
          if [[ "${{ github.event.inputs.choice }}" == "Dev" ]]; then
           echo "ENVIRONMENT=PLMDEV" >> $GITHUB_ENV
          elif [[ "${{ github.event.inputs.choice }}" == "Test" ]]; then
           echo "ENVIRONMENT=PLMTST" >> $GITHUB_ENV
          elif [[ "${{ github.event.inputs.choice }}" == "Prod" ]]; then
           echo "ENVIRONMENT=PLMPRD" >> $GITHUB_ENV
          else
           echo "Invalid environment selection"
          exit 1
          fi


    - name: Move the downloaded .zip file to local drive
      run: |     
           if ! mv PLM_SOURCE/BUILD_MASTER/${{ github.event.inputs.folder_name }}.zip /install_media/PLM/DEPLOY/$ENVIRONMENT/${{ github.event.inputs.folder_name }}.zip; then
             echo "Error: Failed to move the ZIP file"
             exit 1
             if ! chmod +x my-script.sh; then
             echo "Error: Failed to make email script executable"
            fi
            if ! ./my-script.sh; then
             echo "Error: Failed to send error mail"
            fi
           fi

    - name: Check out the repository to the runner
      uses: actions/checkout@v4  

    #- name: Make the script files executable
      #run: |
        #if ! chmod +x my-script.sh; then
          #echo "Error: Failed to make script files executable"
        #fi

    #- name: Run the scripts
      #run: |
        #if ! ./my-script.sh; then
          #echo "Error: Failed to run the scripts"
        #fi

    - name: Run SSH command on target server
      run: |
        if ! output=$(ssh plm@houenvap7 ".//app/plm/DBA/scripts/deployment_script.sh"); then
         echo "Error: Failed to run Script"
        fi
        echo "$output"


         

          
